{"version":3,"file":"1-timer-4cd86dcc.js","sources":["../../src/js/1-timer.js"],"sourcesContent":["// Описаний в документації\nimport flatpickr from \"flatpickr\";\n// Додатковий імпорт стилів\nimport \"flatpickr/dist/flatpickr.min.css\";\n// Описаний у документації\nimport iziToast from \"izitoast\";\n// Додатковий імпорт стилів\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n\nconst datetimePicker = document.querySelector('#datetime-picker');\nconst startBtn = document.querySelector('[data-start]');\nconst timerFields = document.querySelectorAll('.timer .field .value');\n\nlet userSelectedDate = null; // Змінна для зберігання дати, обраної користувачем\nlet intervalId = null; // Змінна для зберігання ID таймера\n\n// Ініціалізація flatpickr\nflatpickr(datetimePicker, {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        userSelectedDate = selectedDates[0]; // Зберігаємо дату, обрану користувачем\n\n        // Перевірка дати: минуле або майбутнє\n        if (userSelectedDate < new Date()) {\n            iziToast.error({\n                title: 'Помилка!',\n                message: 'Будь ласка, виберіть дату в майбутньому',\n                position: 'topRight'\n            });\n            startBtn.disabled = true; // Блокуємо кнопку Start\n            return;\n        }\n\n        startBtn.disabled = false; // Розблоковуємо кнопку Start\n    }\n});\n\n// Обробник події натискання кнопки Start\nstartBtn.addEventListener('click', () => {\n    if (userSelectedDate === null) return; // Перевірка, чи дата вибрана\n\n    // Обчислення залишкового часу\n    const targetDate = userSelectedDate.getTime(); // Отримуємо час в мілісекундах\n    const now = new Date().getTime(); // Отримуємо поточний час в мілісекундах\n    const timeLeft = targetDate - now;\n\n    // Перевірка: чи час вже минув\n    if (timeLeft <= 0) {\n        iziToast.info({\n            title: 'Таймер завершено!',\n            message: 'Обрана дата вже минула',\n            position: 'topRight'\n        });\n        return;\n    }\n\n    // Запуск таймера\n    startBtn.disabled = true; // Блокуємо кнопку Start\n    stopBtn.disabled = false;\n    datetimePicker.disabled = true;\n\n    intervalId = setInterval(updateTimer, 1000);\n});\n\n// Обробник події натискання кнопки Stop\nstopBtn.addEventListener('click', () => {\n    if (intervalId === null) return;\n\n    clearInterval(intervalId);\n    intervalId = null;\n\n    startBtn.disabled = false;\n    stopBtn.disabled = true;\n    datetimePicker.disabled = false;\n\n    // Очищаємо інтерфейс таймера\n    timerFields.forEach(field => field.textContent = '00');\n});\n"],"names":["datetimePicker","startBtn","timerFields","userSelectedDate","intervalId","flatpickr","selectedDates","iziToast","targetDate","now","field"],"mappings":"gDAUA,MAAMA,EAAiB,SAAS,cAAc,kBAAkB,EAC1DC,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAc,SAAS,iBAAiB,sBAAsB,EAEpE,IAAIC,EAAmB,KACnBC,EAAa,KAGjBC,EAAUL,EAAgB,CACtB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQM,EAAe,CAInB,GAHAH,EAAmBG,EAAc,CAAC,EAG9BH,EAAmB,IAAI,KAAQ,CAC/BI,EAAS,MAAM,CACX,MAAO,WACP,QAAS,0CACT,SAAU,UAC1B,CAAa,EACDN,EAAS,SAAW,GACpB,MACH,CAEDA,EAAS,SAAW,EACvB,CACL,CAAC,EAGDA,EAAS,iBAAiB,QAAS,IAAM,CACrC,GAAIE,IAAqB,KAAM,OAG/B,MAAMK,EAAaL,EAAiB,UAC9BM,EAAM,IAAI,KAAM,EAAC,QAAO,EAI9B,GAHiBD,EAAaC,GAGd,EAAG,CACfF,EAAS,KAAK,CACV,MAAO,oBACP,QAAS,yBACT,SAAU,UACtB,CAAS,EACD,MACH,CAGDN,EAAS,SAAW,GACpB,QAAQ,SAAW,GACnBD,EAAe,SAAW,GAE1BI,EAAa,YAAY,YAAa,GAAI,CAC9C,CAAC,EAGD,QAAQ,iBAAiB,QAAS,IAAM,CAChCA,IAAe,OAEnB,cAAcA,CAAU,EACxBA,EAAa,KAEbH,EAAS,SAAW,GACpB,QAAQ,SAAW,GACnBD,EAAe,SAAW,GAG1BE,EAAY,QAAQQ,GAASA,EAAM,YAAc,IAAI,EACzD,CAAC"}